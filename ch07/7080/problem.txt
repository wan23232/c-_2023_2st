파라메터로 배열 index를 받아서 함수에서 전역 배열의 해당 요소를 돌려주면 함수를 마치
배열처럼 사용할 수 있다. 
예를 들어  cout << array[2]; 대신에 cout << farray(2); 이렇게 사용할 수 있다.
이렇게 했을 경우 장점이 있다. 배열의 범위를 넘어서 참조를 시도할 경우 예외 처리를 할 수 있다는 것이다.

그러나 함수로 사용할 경우에는 C언어에서 사용하던 call-by-value를 사용하면 반환시에도 사본이 반환되어
변수로 사용할 수 없다. 즉,  array[3] = 1; 이건 되지만 farray(3) = 1; 이것은 안된다.
그렇지만 반환값 타입으로 C++ 의 reference 를 사용하면 가능하다.

ref_array.cpp 를 수정하여 assignment에도 함수를 사용할 수 있도록 하고 
인덱스가 초과시에는 예외를 발생하게 하라.  예외 처리는 "배열 범위 초과"라고 출력한다.
(main에는 예외 처리 코드만 추가)

예제:
#include <iostream>
using namespace std;
int array[5];

// 함수 farray를 만들어야 한다.

int main(){
	// exception을 받을 수 있도록 수정한다.
	for (int i=0; i<5; i++){
		farray(i) = i*2;   // 배열 array의 값이 수정된다.
	}
	for (int i=0; i<6; i++){
		// 마지막에 i=5 인 경우는 예외가 발생해야한다.
		cout << farray(i) << endl;
	}
}