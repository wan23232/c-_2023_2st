ChickenShop 클래스는 응용 클래스로서 튀김기인 FryMachine혹은 찜기인 SteamMachine등을 이용하여 닭을 요리하고자 한다. 
그런데 새로운 기계가 등장해도 ChickenShop클래스를 수정하지 않고 사용하기 위하여
어댑터 패턴을 이용하기로 하였다.
class adapter 방식을 이용하여 (다중 상속) FriedChickenMaker클래스를 만들라.
또 object adapter방식을 이용하여(단일 상속) SteamedChickenMaker 클래스를 만들라.
이를 위해서 사용하는 인터페이스인 Cooker에 필요한 부분도 정의해야한다.

실행 예:
a.out
튀튀 치킨입니다. 몇마리 주문하시겠습니까? (0이면 영업 종료)  5
튀김기에 튀깁니다.
튀김기에 튀깁니다.
튀김기에 튀깁니다.
튀김기에 튀깁니다.
튀김기에 튀깁니다.
튀튀 치킨입니다. 몇마리 주문하시겠습니까? (0이면 영업 종료)  2
튀김기에 튀깁니다.
튀김기에 튀깁니다.
튀튀 치킨입니다. 몇마리 주문하시겠습니까? (0이면 영업 종료)  0

영업을 종료합니다.
용인 찜닭입니다. 몇마리 주문하시겠습니까? (0이면 영업 종료)  3
찜기에 찝니다.
찜기에 찝니다.
찜기에 찝니다.
용인 찜닭입니다. 몇마리 주문하시겠습니까? (0이면 영업 종료)  0

영업을 종료합니다.
